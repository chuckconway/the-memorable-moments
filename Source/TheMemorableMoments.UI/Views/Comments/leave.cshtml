@model TheMemorableMoments.UI.Models.Views.Comments.CommentsView
@using TheMemorableMoments.Domain.Model.MediaClasses
@{ Import Namespace="TheMemorableMoments.UI.Web"}
@{ Import Namespace="Microsoft.Web.Mvc"}
@using TheMemorableMoments.UI.Web.Controls
@using TheMemorableMoments.UI.Web.Helpers


@{ 
 ViewBag.Title = "@((string.IsNullOrEmpty(Model.Media.Title) ? "Untitled" : Model.Media.Title)) - leave comments  - @(Model.Authorization.Owner.DisplayName)"; 
}

@section pageHeader { 
@(Model.Authorization.Owner.DisplayName) 
}

@section head { 
<style type="text/css"> 
        @import url("/Content/css/common.css");
        @import url("/Content/css/comments/leave.css");   
    </style> 

    <script language="javascript" type="text/javascript" src="/Scripts/Controls/jquery.timeago.js"></script>
    <script language="javascript" type="text/javascript" src="/Scripts/Pages/comments/leave.js"></script>
    <script language="javascript" type="text/javascript" > var message = '@(Model.UIMessage)'; </script> 
}

@section navigation { 
@(Html.SiteNavigation(Model.Authorization)) 
}

@section MainContent { 
<div id="userheader">
        @(UserNavigationHelper.GetBreadCrumbs(Model.BreadCrumbs))
    </div>
        
        <div class="commentimage hidden"  >
            <p >@((string.IsNullOrEmpty(Model.Media.Title) ? "Untitled" : Model.Media.Title))</p>
                @(string.Format("<img src=\"{0}\" style=\"margin-top:2px;\" id=\"image\" alt=\"{1}\" />", Model.GetImageSrc(Model.Media, PhotoType.Websize), HttpUtility.HtmlEncode(Model.Media.Description)))           
         @(Html.ValidationSummary())
         @using (Html.BeginForm()) {
         
         <div class="comment hidden"  >
         
         <h3 style="font-weight:bold;margin-bottom:30px;">Leave a Comment</h3>
         
            <p><label>Name (required)</label>@(Html.TextBox("Name", "", new Dictionary<string, object>{{"class","commentinput"}}))@(Html.ValidationMessage("NameErrorMessage"))</p>
            <p><label>Email (required, kept private)</label>@(Html.TextBox("Email", "", new Dictionary<string, object> { { "class", "commentinput" } }))@(Html.ValidationMessage("EmailErrorMessage"))</p>
            <p><label>Website (optional, [i.e. http://www.me.com])</label>@(Html.TextBox("Website", "", new Dictionary<string, object> { { "class", "commentinput" } }))@(Html.ValidationMessage("WebsiteErrorMessage"))</p>
            <p><label>Comments <span>(required) </span></label> <textarea name="Comments" id="Comments" ></textarea>@(Html.ValidationMessage("CommentsErrorMessage"))</p>           

            <p class="submit">@(Html.SubmitButton("CommentButton", "submit my comment", new Dictionary<string, object>{{"style","color:#fff;font-size:12px;"}}))</p>
          </div>
         
         }       
        </div>
        
        <div class="postedcomment editphoto hidden">
        
        @(string.Format("<h3 style=\"margin-bottom:20px;\"><strong>{0}</strong> {1} for '{2}'</h3>", Model.Comments.Count, (Model.Comments.Count == 1 ? "Response" : "Responses"), (string.IsNullOrEmpty(Model.Media.Title) ? "Untitled" : Model.Media.Title)))
         @if (Model.Comments.Count > 0) 
            {
                for (int commentIndex = 0; commentIndex < Model.Comments.Count; commentIndex++)
                {
            
                <div class="commentsection@((commentIndex%2 == 1 ? "" : " altcomment"))">
                    <a name="comment-@(Model.Comments[commentIndex].CommentId)"></a>                            
                    <p class="commentauthor" > @((string.IsNullOrEmpty(Model.Comments[commentIndex].SiteUrl)
                                           ? Model.Comments[commentIndex].Name
                                           : string.Format(@"<a class=""hyperlinks"" href=""{0}"" title=""visit {1}"" >{1}</a>",
                                                           Model.Comments[commentIndex].SiteUrl,
                                                           Model.Comments[commentIndex].Name))) - @(string.Format(@"<abbr class=""timeago"" title=""{0}"">{1}</abbr>",
                                                    Model.Comments[commentIndex].CommentDate.ToString("o"),
                                                    Model.Comments[commentIndex].CommentDate.ToLongDateString()))</p>                    
                <div class="commentcomment" >@(Model.Comments[commentIndex].Text)</div> 
                                
                </div> 
         
         }
            } else {
               <p class="nocommentsmessage" ><strong>No comments</strong> have been made, be the first to leave a comment!</p>         
          }
    @(Html.Message(Model.UIMessage))
    </div> 
}
